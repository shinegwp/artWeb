<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.art.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.art.pojo.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="uidentification" property="uidentification" jdbcType="VARCHAR" />
    <result column="upassword" property="upassword" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, birthday, sex, uname, uidentification, upassword, tel, qq, email, money
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.art.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.art.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.art.pojo.User" >
    insert into user (uid, birthday, sex, 
      uname, uidentification, upassword, 
      tel, qq, email, money
      )
    values (#{uid,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, #{sex,jdbcType=VARCHAR}, 
      #{uname,jdbcType=VARCHAR}, #{uidentification,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.art.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="uidentification != null" >
        uidentification,
      </if>
      <if test="upassword != null" >
        upassword,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="money != null" >
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="uidentification != null" >
        #{uidentification,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.art.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.uidentification != null" >
        uidentification = #{record.uidentification,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set uid = #{record.uid,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=VARCHAR},
      uname = #{record.uname,jdbcType=VARCHAR},
      uidentification = #{record.uidentification,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.art.pojo.User" >
    update user
    <set >
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="uidentification != null" >
        uidentification = #{uidentification,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.art.pojo.User" >
    update user
    set birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      uidentification = #{uidentification,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>